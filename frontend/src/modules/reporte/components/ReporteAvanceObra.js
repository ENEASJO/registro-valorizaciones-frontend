import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Line, Area, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, ComposedChart, ReferenceLine } from 'recharts';
import { TrendingUp, Calendar, Clock, AlertTriangle, CheckCircle, Target, Activity, Award, ArrowUp, ArrowDown, MinusCircle } from 'lucide-react';
const ReporteAvanceObra = ({ datos, filtros }) => {
    // Configuración de colores para gráficos
    const colores = {
        programado: '#3B82F6',
        real: '#10B981',
        critico: '#EF4444',
        alerta: '#F59E0B',
        exito: '#10B981',
        neutro: '#6B7280',
        info: '#06B6D4'
    };
    // Datos para la Curva S
    const datosCurvaS = datos.cronograma.map((item, index) => ({
        periodo: item.periodo,
        avanceProgramado: item.acumuladoProgramado,
        avanceReal: item.acumuladoReal,
        meta: index === 0 ? item.acumuladoProgramado : undefined,
        proyeccion: index > 0 ? item.acumuladoReal + ((item.acumuladoProgramado - item.acumuladoReal) * 0.8) : undefined
    }));
    // Datos para análisis de desviaciones
    const datosDesviaciones = datos.cronograma.map(item => ({
        periodo: item.periodo,
        desviacion: item.acumuladoReal - item.acumuladoProgramado,
        programado: item.acumuladoProgramado,
        real: item.acumuladoReal
    }));
    // Datos para timeline de hitos
    const hitosTimeline = [
        { hito: 'Inicio de Obra', fecha: datos.obra.fechaInicio, estado: 'completado', avance: 0 },
        { hito: 'Primera Valorización', fecha: '2025-02-01', estado: 'completado', avance: 9.8 },
        { hito: 'Avance 25%', fecha: '2025-04-15', estado: 'programado', avance: 25 },
        { hito: 'Avance 50%', fecha: '2025-07-15', estado: 'programado', avance: 50 },
        { hito: 'Avance 75%', fecha: '2025-10-15', estado: 'programado', avance: 75 },
        { hito: 'Término de Obra', fecha: datos.obra.fechaFinPrevista, estado: 'programado', avance: 100 }
    ];
    // Función para determinar el ícono de tendencia
    const iconoTendencia = (valor) => {
        if (valor > 0)
            return _jsx(ArrowUp, { className: "w-4 h-4 text-green-600" });
        if (valor < 0)
            return _jsx(ArrowDown, { className: "w-4 h-4 text-red-600" });
        return _jsx(MinusCircle, { className: "w-4 h-4 text-gray-600" });
    };
    // Función para formatear números como porcentaje
    const formatearPorcentaje = (valor) => `${valor.toFixed(1)}%`;
    // Función para formatear números como moneda
    const formatearMoneda = (valor) => new Intl.NumberFormat('es-PE', { style: 'currency', currency: 'PEN' }).format(valor);
    // Custom tooltip para gráficos
    const CustomTooltip = ({ active, payload, label }) => {
        if (active && payload && payload.length) {
            return (_jsxs("div", { className: "bg-white p-3 border border-gray-300 rounded-lg shadow-lg", children: [_jsx("p", { className: "font-medium text-gray-900", children: `Periodo: ${label}` }), payload.map((entry, index) => (_jsx("p", { style: { color: entry.color }, children: `${entry.name}: ${formatearPorcentaje(entry.value)}` }, index)))] }));
        }
        return null;
    };
    return (_jsxs("div", { className: "space-y-8", children: [_jsx(motion.div, { initial: { opacity: 0, y: -20 }, animate: { opacity: 1, y: 0 }, className: "bg-gradient-to-r from-blue-600 to-blue-800 text-white p-6 rounded-xl", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold", children: "Reporte de Avance de Obra" }), _jsxs("p", { className: "text-blue-100 mt-1", children: [datos.obra.nombre, " - ", filtros.fechaInicio, " al ", filtros.fechaFin] }), _jsxs("p", { className: "text-blue-200 text-sm mt-1", children: ["Contrato: ", datos.obra.numeroContrato] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-3xl font-bold", children: formatearPorcentaje(datos.avance.fisicoReal) }), _jsx("div", { className: "text-sm text-blue-100", children: "Avance Real" })] })] }) }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.1 }, className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Avance F\u00EDsico" }), _jsx("p", { className: "text-2xl font-bold text-blue-600", children: formatearPorcentaje(datos.avance.fisicoReal) }), _jsxs("div", { className: "flex items-center mt-1 text-sm", children: [iconoTendencia(datos.avance.desviacionFisica), _jsx("span", { className: `ml-1 ${datos.avance.desviacionFisica >= 0 ? 'text-green-600' : 'text-red-600'}`, children: formatearPorcentaje(Math.abs(datos.avance.desviacionFisica)) })] })] }), _jsx("div", { className: "p-3 bg-blue-100 rounded-lg", children: _jsx(Activity, { className: "w-6 h-6 text-blue-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Avance Econ\u00F3mico" }), _jsx("p", { className: "text-2xl font-bold text-green-600", children: formatearPorcentaje(datos.avance.economicoReal) }), _jsxs("div", { className: "flex items-center mt-1 text-sm", children: [iconoTendencia(datos.avance.desviacionEconomica), _jsx("span", { className: `ml-1 ${datos.avance.desviacionEconomica >= 0 ? 'text-green-600' : 'text-red-600'}`, children: formatearPorcentaje(Math.abs(datos.avance.desviacionEconomica)) })] })] }), _jsx("div", { className: "p-3 bg-green-100 rounded-lg", children: _jsx(TrendingUp, { className: "w-6 h-6 text-green-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "D\u00EDas Transcurridos" }), _jsx("p", { className: "text-2xl font-bold text-amber-600", children: datos.obra.diasTranscurridos }), _jsxs("p", { className: "text-sm text-gray-500 mt-1", children: ["de ", datos.obra.diasTranscurridos + datos.obra.diasRestantes, " d\u00EDas"] })] }), _jsx("div", { className: "p-3 bg-amber-100 rounded-lg", children: _jsx(Calendar, { className: "w-6 h-6 text-amber-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Estado del Proyecto" }), _jsx("p", { className: `text-2xl font-bold ${datos.avance.tendenciaTermino === 'EN_TIEMPO' ? 'text-green-600' :
                                                datos.avance.tendenciaTermino === 'ADELANTADO' ? 'text-blue-600' : 'text-red-600'}`, children: datos.avance.tendenciaTermino === 'EN_TIEMPO' ? 'A Tiempo' :
                                                datos.avance.tendenciaTermino === 'ADELANTADO' ? 'Adelantado' : 'Atrasado' }), datos.avance.diasAtrasoProyectado > 0 && (_jsxs("p", { className: "text-sm text-red-600 mt-1", children: ["+", datos.avance.diasAtrasoProyectado, " d\u00EDas proyectado"] }))] }), _jsx("div", { className: `p-3 rounded-lg ${datos.avance.tendenciaTermino === 'EN_TIEMPO' ? 'bg-green-100' :
                                        datos.avance.tendenciaTermino === 'ADELANTADO' ? 'bg-blue-100' : 'bg-red-100'}`, children: datos.avance.tendenciaTermino === 'EN_TIEMPO' ?
                                        _jsx(CheckCircle, { className: "w-6 h-6 text-green-600" }) :
                                        datos.avance.tendenciaTermino === 'ADELANTADO' ?
                                            _jsx(Award, { className: "w-6 h-6 text-blue-600" }) :
                                            _jsx(Clock, { className: "w-6 h-6 text-red-600" }) })] }) })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.2 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Curva S - Avance Programado vs Real" }), _jsx("p", { className: "text-sm text-gray-600", children: "Comparaci\u00F3n del avance f\u00EDsico programado contra el avance real ejecutado" })] }), _jsx("div", { className: "h-96", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(ComposedChart, { data: datosCurvaS, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "#f0f0f0" }), _jsx(XAxis, { dataKey: "periodo", stroke: "#666", fontSize: 12, tickMargin: 10 }), _jsx(YAxis, { stroke: "#666", fontSize: 12, tickFormatter: formatearPorcentaje, domain: [0, 100] }), _jsx(Tooltip, { content: _jsx(CustomTooltip, {}) }), _jsx(Legend, {}), _jsx(Area, { type: "monotone", dataKey: "proyeccion", fill: colores.programado, fillOpacity: 0.1, stroke: "none", name: "Proyecci\u00F3n" }), _jsx(Line, { type: "monotone", dataKey: "avanceProgramado", stroke: colores.programado, strokeWidth: 3, dot: { fill: colores.programado, strokeWidth: 2, r: 5 }, activeDot: { r: 7 }, name: "Avance Programado" }), _jsx(Line, { type: "monotone", dataKey: "avanceReal", stroke: colores.real, strokeWidth: 3, strokeDasharray: "5 5", dot: { fill: colores.real, strokeWidth: 2, r: 5 }, activeDot: { r: 7 }, name: "Avance Real" }), _jsx(ReferenceLine, { y: 100, stroke: "#e0e0e0", strokeDasharray: "2 2" })] }) }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(motion.div, { initial: { opacity: 0, x: -20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.3 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "An\u00E1lisis de Desviaciones" }), _jsx("p", { className: "text-sm text-gray-600", children: "Diferencia entre el avance programado y el real por periodo" })] }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(BarChart, { data: datosDesviaciones, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "#f0f0f0" }), _jsx(XAxis, { dataKey: "periodo", stroke: "#666", fontSize: 12 }), _jsx(YAxis, { stroke: "#666", fontSize: 12, tickFormatter: formatearPorcentaje }), _jsx(Tooltip, { formatter: (value, name) => [formatearPorcentaje(value), name], labelFormatter: (label) => `Periodo: ${label}` }), _jsx(Bar, { dataKey: "desviacion", fill: colores.info, name: "Desviaci\u00F3n (%)", radius: [2, 2, 0, 0] }), _jsx(ReferenceLine, { y: 0, stroke: "#666" })] }) }) })] }), _jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.4 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Timeline de Hitos" }), _jsx("p", { className: "text-sm text-gray-600", children: "Cronograma de hitos principales del proyecto" })] }), _jsx("div", { className: "space-y-4", children: hitosTimeline.map((hito, index) => (_jsxs("div", { className: "flex items-center space-x-4", children: [_jsx("div", { className: `w-4 h-4 rounded-full flex-shrink-0 ${hito.estado === 'completado' ? 'bg-green-500' :
                                                hito.estado === 'en-proceso' ? 'bg-blue-500' :
                                                    'bg-gray-300'}` }), _jsx("div", { className: `h-px flex-1 ${index < hitosTimeline.length - 1 ? 'bg-gray-200' : 'transparent'}` }), _jsxs("div", { className: "flex-shrink-0 text-right", children: [_jsx("div", { className: "font-medium text-sm text-gray-900", children: hito.hito }), _jsx("div", { className: "text-xs text-gray-500", children: new Date(hito.fecha).toLocaleDateString('es-PE') }), _jsx("div", { className: "text-xs font-medium text-blue-600", children: formatearPorcentaje(hito.avance) })] })] }, index))) })] })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.5 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 mb-2 flex items-center", children: [_jsx(AlertTriangle, { className: "w-5 h-5 text-amber-500 mr-2" }), "Alertas de Proyecto"] }), _jsx("p", { className: "text-sm text-gray-600", children: "Situaciones que requieren atenci\u00F3n inmediata" })] }), _jsx("div", { className: "space-y-4", children: datos.alertas.map((alerta) => (_jsxs("div", { className: `p-4 rounded-lg border-l-4 ${alerta.criticidad === 'CRITICO' ? 'border-red-500 bg-red-50' :
                                        alerta.criticidad === 'ALTO' ? 'border-amber-500 bg-amber-50' :
                                            alerta.criticidad === 'MEDIO' ? 'border-blue-500 bg-blue-50' :
                                                'border-green-500 bg-green-50'}`, children: [_jsxs("div", { className: "flex items-start justify-between", children: [_jsxs("div", { className: "flex-1", children: [_jsx("h4", { className: "font-medium text-gray-900 mb-1", children: alerta.titulo }), _jsx("p", { className: "text-sm text-gray-600 mb-2", children: alerta.descripcion }), alerta.accionRequerida && (_jsxs("p", { className: "text-sm font-medium text-blue-600", children: ["Acci\u00F3n: ", alerta.accionRequerida] }))] }), _jsx("span", { className: `px-2 py-1 text-xs font-medium rounded-full ${alerta.criticidad === 'CRITICO' ? 'bg-red-100 text-red-800' :
                                                        alerta.criticidad === 'ALTO' ? 'bg-amber-100 text-amber-800' :
                                                            alerta.criticidad === 'MEDIO' ? 'bg-blue-100 text-blue-800' :
                                                                'bg-green-100 text-green-800'}`, children: alerta.criticidad })] }), _jsxs("div", { className: "text-xs text-gray-500 mt-2", children: ["Detectado: ", new Date(alerta.fechaDeteccion).toLocaleDateString('es-PE')] })] }, alerta.id))) })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.6 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 mb-2 flex items-center", children: [_jsx(Target, { className: "w-5 h-5 text-blue-500 mr-2" }), "Recomendaciones"] }), _jsx("p", { className: "text-sm text-gray-600", children: "Acciones sugeridas para mejorar el desempe\u00F1o" })] }), _jsx("div", { className: "space-y-4", children: datos.recomendaciones.map((recomendacion) => (_jsxs("div", { className: "p-4 bg-blue-50 rounded-lg border border-blue-200", children: [_jsxs("div", { className: "flex items-start justify-between mb-2", children: [_jsx("h4", { className: "font-medium text-gray-900", children: recomendacion.titulo }), _jsx("span", { className: `px-2 py-1 text-xs font-medium rounded-full ${recomendacion.prioridad === 'ALTA' ? 'bg-red-100 text-red-800' :
                                                        recomendacion.prioridad === 'MEDIA' ? 'bg-amber-100 text-amber-800' :
                                                            'bg-green-100 text-green-800'}`, children: recomendacion.prioridad })] }), _jsx("p", { className: "text-sm text-gray-600 mb-3", children: recomendacion.descripcion }), _jsxs("div", { className: "grid grid-cols-1 sm:grid-cols-2 gap-3 text-xs", children: [recomendacion.beneficioEsperado && (_jsxs("div", { children: [_jsx("span", { className: "font-medium text-green-600", children: "Beneficio:" }), _jsx("p", { className: "text-gray-600", children: recomendacion.beneficioEsperado })] })), recomendacion.responsable && (_jsxs("div", { children: [_jsx("span", { className: "font-medium text-blue-600", children: "Responsable:" }), _jsx("p", { className: "text-gray-600", children: recomendacion.responsable })] }))] }), recomendacion.plazoEjecucion && (_jsxs("div", { className: "mt-2 text-xs", children: [_jsx("span", { className: "font-medium text-purple-600", children: "Plazo:" }), _jsx("span", { className: "text-gray-600 ml-1", children: recomendacion.plazoEjecucion })] }))] }, recomendacion.id))) })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.7 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Estado de Valorizaciones" }), _jsx("p", { className: "text-sm text-gray-600", children: "Seguimiento de valorizaciones presentadas y programadas" })] }), _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-sm", children: [_jsx("thead", { children: _jsxs("tr", { className: "border-b border-gray-200", children: [_jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "#" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Fecha Programada" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Fecha Real" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Monto" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Estado" }), _jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Atraso" })] }) }), _jsx("tbody", { children: datos.valorizaciones.map((val, index) => (_jsxs("tr", { className: "border-b border-gray-100 hover:bg-gray-50", children: [_jsx("td", { className: "py-3 px-4 font-medium text-gray-900", children: val.numero }), _jsx("td", { className: "py-3 px-4 text-gray-600", children: new Date(val.fechaProgramada).toLocaleDateString('es-PE') }), _jsx("td", { className: "py-3 px-4 text-gray-600", children: val.fechaReal ? new Date(val.fechaReal).toLocaleDateString('es-PE') : '-' }), _jsx("td", { className: "py-3 px-4 font-medium text-gray-900", children: formatearMoneda(val.monto) }), _jsx("td", { className: "py-3 px-4", children: _jsx("span", { className: `px-2 py-1 text-xs font-medium rounded-full ${val.estado === 'APROBADA' ? 'bg-green-100 text-green-800' :
                                                        val.estado === 'PRESENTADA' ? 'bg-blue-100 text-blue-800' :
                                                            val.estado === 'PROGRAMADA' ? 'bg-gray-100 text-gray-800' :
                                                                'bg-amber-100 text-amber-800'}`, children: val.estado }) }), _jsx("td", { className: "py-3 px-4", children: val.diasAtraso > 0 ? (_jsxs("span", { className: "text-red-600 font-medium", children: ["+", val.diasAtraso, " d\u00EDas"] })) : (_jsx("span", { className: "text-green-600 font-medium", children: "A tiempo" })) })] }, index))) })] }) })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.8 }, className: "bg-gray-50 p-6 rounded-xl border border-gray-200 text-center text-sm text-gray-600", children: [_jsxs("p", { children: ["Reporte generado el ", new Date().toLocaleDateString('es-PE'), " a las ", new Date().toLocaleTimeString('es-PE')] }), _jsx("p", { className: "mt-1", children: "Sistema de Gesti\u00F3n de Valorizaciones - Avance de Obra" })] })] }));
};
export default ReporteAvanceObra;
