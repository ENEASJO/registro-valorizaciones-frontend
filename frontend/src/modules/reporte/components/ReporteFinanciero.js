import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, PieChart, Pie, Cell, ComposedChart, ReferenceLine } from 'recharts';
import { DollarSign, TrendingUp, Wallet, Target, BarChart as BarChartIcon, Calculator, Clock, ArrowUpRight, ArrowDownRight } from 'lucide-react';
const ReporteFinanciero = ({ datos, filtros }) => {
    // Configuración de colores para gráficos
    const colores = {
        ingresos: '#10B981',
        egresos: '#EF4444',
        saldo: '#3B82F6',
        proyeccion: '#F59E0B',
        objetivo: '#8B5CF6',
        critico: '#EF4444',
        alerta: '#F59E0B',
        exito: '#10B981',
        neutro: '#6B7280'
    };
    // Datos para flujo de efectivo
    const datosFlujoCaja = datos.flujoEfectivo.map(item => ({
        ...item,
        saldoPositivo: item.saldo > 0 ? item.saldo : 0,
        saldoNegativo: item.saldo < 0 ? Math.abs(item.saldo) : 0
    }));
    // Datos para distribución de deducciones
    const datosDeduccionesChart = [
        { name: 'Adelantos Directos', value: datos.deducciones.adelantosDirectos, color: colores.critico },
        { name: 'Adelantos Materiales', value: datos.deducciones.adelantosMateriales, color: colores.alerta },
        { name: 'Retención Garantía', value: datos.deducciones.retencionesGarantia, color: colores.ingresos },
        { name: 'Penalidades', value: datos.deducciones.penalidades, color: colores.neutro },
        { name: 'Otras', value: datos.deducciones.otras, color: colores.saldo }
    ].filter(item => item.value > 0);
    // Datos para análisis de liquidez
    const datosLiquidez = datos.proyecciones.liquidezProyectada.map(item => ({
        periodo: item.periodo,
        disponible: item.disponible / 1000, // Convertir a miles
        requerido: item.requerido / 1000,
        gap: item.gap / 1000,
        gapPositivo: item.gap > 0 ? item.gap / 1000 : 0,
        gapNegativo: item.gap < 0 ? Math.abs(item.gap) / 1000 : 0
    }));
    // Función para formatear números como moneda
    const formatearMoneda = (valor) => new Intl.NumberFormat('es-PE', { style: 'currency', currency: 'PEN', minimumFractionDigits: 0 }).format(valor);
    // Función para formatear números como porcentaje
    const formatearPorcentaje = (valor) => `${valor.toFixed(1)}%`;
    // Función para formatear números con separadores de miles
    const formatearNumero = (valor) => new Intl.NumberFormat('es-PE', { minimumFractionDigits: 0 }).format(valor);
    // Función para determinar el color de tendencia
    const obtenerColorTendencia = (valor) => {
        if (valor > 0)
            return 'text-green-600';
        if (valor < 0)
            return 'text-red-600';
        return 'text-gray-600';
    };
    // Custom tooltip para gráficos de moneda
    const TooltipMoneda = ({ active, payload, label }) => {
        if (active && payload && payload.length) {
            return (_jsxs("div", { className: "bg-white p-3 border border-gray-300 rounded-lg shadow-lg", children: [_jsx("p", { className: "font-medium text-gray-900", children: `${label}` }), payload.map((entry, index) => (_jsx("p", { style: { color: entry.color }, children: `${entry.name}: ${formatearMoneda(entry.value)}` }, index)))] }));
        }
        return null;
    };
    // Custom tooltip para análisis de liquidez
    const TooltipLiquidez = ({ active, payload, label }) => {
        if (active && payload && payload.length) {
            return (_jsxs("div", { className: "bg-white p-3 border border-gray-300 rounded-lg shadow-lg", children: [_jsx("p", { className: "font-medium text-gray-900", children: `Periodo: ${label}` }), payload.map((entry, index) => (_jsx("p", { style: { color: entry.color }, children: `${entry.name}: ${formatearMoneda(entry.value * 1000)}` }, index)))] }));
        }
        return null;
    };
    return (_jsxs("div", { className: "space-y-8", children: [_jsx(motion.div, { initial: { opacity: 0, y: -20 }, animate: { opacity: 1, y: 0 }, className: "bg-gradient-to-r from-green-600 to-emerald-700 text-white p-6 rounded-xl", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("h2", { className: "text-2xl font-bold", children: "Reporte Financiero Consolidado" }), _jsxs("p", { className: "text-green-100 mt-1", children: ["An\u00E1lisis integral de la situaci\u00F3n financiera - ", filtros.fechaInicio, " al ", filtros.fechaFin] }), _jsxs("p", { className: "text-green-200 text-sm mt-1", children: ["Inversi\u00F3n Total: ", formatearMoneda(datos.resumenEjecutivo.inversionTotal)] })] }), _jsxs("div", { className: "text-right", children: [_jsx("div", { className: "text-3xl font-bold", children: formatearPorcentaje(datos.resumenEjecutivo.porcentajeEjecucion) }), _jsx("div", { className: "text-sm text-green-100", children: "Ejecuci\u00F3n Presupuestal" })] })] }) }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.1 }, className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6", children: [_jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Inversi\u00F3n Ejecutada" }), _jsx("p", { className: "text-2xl font-bold text-green-600", children: formatearMoneda(datos.resumenEjecutivo.inversionEjecutada) }), _jsxs("p", { className: "text-sm text-gray-500 mt-1", children: [formatearPorcentaje(datos.resumenEjecutivo.porcentajeEjecucion), " del total"] })] }), _jsx("div", { className: "p-3 bg-green-100 rounded-lg", children: _jsx(TrendingUp, { className: "w-6 h-6 text-green-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Saldo por Ejecutar" }), _jsx("p", { className: "text-2xl font-bold text-blue-600", children: formatearMoneda(datos.resumenEjecutivo.saldoPorEjecutar) }), _jsxs("p", { className: "text-sm text-gray-500 mt-1", children: [formatearPorcentaje(100 - datos.resumenEjecutivo.porcentajeEjecucion), " restante"] })] }), _jsx("div", { className: "p-3 bg-blue-100 rounded-lg", children: _jsx(Wallet, { className: "w-6 h-6 text-blue-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "Obras Activas" }), _jsx("p", { className: "text-2xl font-bold text-purple-600", children: datos.resumenEjecutivo.obrasActivas }), _jsxs("p", { className: "text-sm text-gray-500 mt-1", children: [datos.resumenEjecutivo.obrasTerminadas, " terminadas"] })] }), _jsx("div", { className: "p-3 bg-purple-100 rounded-lg", children: _jsx(BarChartIcon, { className: "w-6 h-6 text-purple-600" }) })] }) }), _jsx("div", { className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: _jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { children: [_jsx("p", { className: "text-sm text-gray-600", children: "ROI" }), _jsx("p", { className: "text-2xl font-bold text-amber-600", children: formatearPorcentaje(datos.indicadores.roi) }), _jsxs("p", { className: "text-sm text-gray-500 mt-1", children: ["TIR: ", formatearPorcentaje(datos.indicadores.tir)] })] }), _jsx("div", { className: "p-3 bg-amber-100 rounded-lg", children: _jsx(Target, { className: "w-6 h-6 text-amber-600" }) })] }) })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.2 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 mb-2 flex items-center", children: [_jsx(DollarSign, { className: "w-5 h-5 text-green-600 mr-2" }), "Resumen Ejecutivo de Inversi\u00F3n"] }), _jsx("p", { className: "text-sm text-gray-600", children: "Indicadores clave del estado financiero del portafolio de obras" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-6", children: [_jsxs("div", { className: "bg-gradient-to-br from-blue-50 to-blue-100 p-4 rounded-lg", children: [_jsx("h4", { className: "font-medium text-blue-900 mb-3", children: "Inversi\u00F3n Total" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-blue-700", children: "Programado:" }), _jsx("span", { className: "font-medium text-blue-900", children: formatearMoneda(datos.resumenEjecutivo.inversionTotal) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-blue-700", children: "Ejecutado:" }), _jsx("span", { className: "font-medium text-blue-900", children: formatearMoneda(datos.resumenEjecutivo.inversionEjecutada) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-blue-700", children: "Por Ejecutar:" }), _jsx("span", { className: "font-medium text-blue-900", children: formatearMoneda(datos.resumenEjecutivo.saldoPorEjecutar) })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-green-50 to-green-100 p-4 rounded-lg", children: [_jsx("h4", { className: "font-medium text-green-900 mb-3", children: "Estado de Obras" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-green-700", children: "En Ejecuci\u00F3n:" }), _jsx("span", { className: "font-medium text-green-900", children: datos.resumenEjecutivo.obrasActivas })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-green-700", children: "Terminadas:" }), _jsx("span", { className: "font-medium text-green-900", children: datos.resumenEjecutivo.obrasTerminadas })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-green-700", children: "Paralizadas:" }), _jsx("span", { className: "font-medium text-green-900", children: datos.resumenEjecutivo.obrasParalizadas })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-amber-50 to-amber-100 p-4 rounded-lg", children: [_jsx("h4", { className: "font-medium text-amber-900 mb-3", children: "Indicadores" }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-amber-700", children: "Monto Promedio:" }), _jsx("span", { className: "font-medium text-amber-900", children: formatearMoneda(datos.resumenEjecutivo.montoPromedioPorObra) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-amber-700", children: "Eficiencia:" }), _jsx("span", { className: "font-medium text-amber-900", children: formatearPorcentaje(datos.resumenEjecutivo.porcentajeEjecucion) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-amber-700", children: "Ciclo Efectivo:" }), _jsxs("span", { className: "font-medium text-amber-900", children: [datos.indicadores.cicloEfectivo, " d\u00EDas"] })] })] })] })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.3 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Flujo de Efectivo Hist\u00F3rico" }), _jsx("p", { className: "text-sm text-gray-600", children: "An\u00E1lisis de ingresos, egresos y saldo neto por periodo" })] }), _jsx("div", { className: "h-96", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(ComposedChart, { data: datosFlujoCaja, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "#f0f0f0" }), _jsx(XAxis, { dataKey: "periodo", stroke: "#666", fontSize: 12, angle: -45, textAnchor: "end", height: 80 }), _jsx(YAxis, { stroke: "#666", fontSize: 12, tickFormatter: (value) => formatearNumero(value / 1000) + 'k' }), _jsx(Tooltip, { content: _jsx(TooltipMoneda, {}) }), _jsx(Legend, {}), _jsx(Bar, { dataKey: "ingresos", fill: colores.ingresos, name: "Ingresos", radius: [2, 2, 0, 0] }), _jsx(Bar, { dataKey: "egresos", fill: colores.egresos, name: "Egresos", radius: [2, 2, 0, 0] }), _jsx(Line, { type: "monotone", dataKey: "saldo", stroke: colores.saldo, strokeWidth: 3, dot: { fill: colores.saldo, strokeWidth: 2, r: 5 }, name: "Saldo Neto" }), _jsx(Line, { type: "monotone", dataKey: "acumulado", stroke: colores.proyeccion, strokeWidth: 2, strokeDasharray: "5 5", dot: { fill: colores.proyeccion, strokeWidth: 2, r: 4 }, name: "Acumulado" }), _jsx(ReferenceLine, { y: 0, stroke: "#666", strokeDasharray: "2 2" })] }) }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-6", children: [_jsxs(motion.div, { initial: { opacity: 0, x: -20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.4 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "An\u00E1lisis de Liquidez Proyectada" }), _jsx("p", { className: "text-sm text-gray-600", children: "Comparaci\u00F3n entre recursos disponibles y requerimientos futuros" })] }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(BarChart, { data: datosLiquidez, children: [_jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "#f0f0f0" }), _jsx(XAxis, { dataKey: "periodo", stroke: "#666", fontSize: 12 }), _jsx(YAxis, { stroke: "#666", fontSize: 12, tickFormatter: (value) => formatearNumero(value) + 'k' }), _jsx(Tooltip, { content: _jsx(TooltipLiquidez, {}) }), _jsx(Legend, {}), _jsx(Bar, { dataKey: "disponible", fill: colores.ingresos, name: "Disponible" }), _jsx(Bar, { dataKey: "requerido", fill: colores.egresos, name: "Requerido" })] }) }) }), _jsx("div", { className: "mt-4 space-y-2", children: datosLiquidez.map((item, index) => (_jsxs("div", { className: "flex items-center justify-between text-sm", children: [_jsxs("span", { className: "text-gray-600", children: [item.periodo, ":"] }), _jsxs("span", { className: `font-medium ${item.gap > 0 ? 'text-green-600' : item.gap < 0 ? 'text-red-600' : 'text-gray-600'}`, children: [item.gap > 0 ? '+' : '', formatearMoneda(item.gap * 1000)] })] }, index))) })] }), _jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.5 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Distribuci\u00F3n de Deducciones" }), _jsx("p", { className: "text-sm text-gray-600", children: "Composici\u00F3n de las deducciones aplicadas en el periodo" })] }), _jsx("div", { className: "h-64", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(PieChart, { children: [_jsx(Pie, { data: datosDeduccionesChart, cx: "50%", cy: "50%", labelLine: false, label: ({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`, outerRadius: 80, fill: "#8884d8", dataKey: "value", children: datosDeduccionesChart.map((entry, index) => (_jsx(Cell, { fill: entry.color }, `cell-${index}`))) }), _jsx(Tooltip, { formatter: (value) => formatearMoneda(value) })] }) }) }), _jsxs("div", { className: "mt-4 space-y-2", children: [_jsx("div", { className: "text-center", children: _jsxs("p", { className: "text-lg font-bold text-gray-900", children: ["Total: ", formatearMoneda(datos.deducciones.total)] }) }), _jsx("div", { className: "grid grid-cols-1 gap-2 text-xs", children: datosDeduccionesChart.map((item, index) => (_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center", children: [_jsx("div", { className: "w-3 h-3 rounded-full mr-2", style: { backgroundColor: item.color } }), _jsx("span", { className: "text-gray-600", children: item.name })] }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(item.value) })] }, index))) })] })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.6 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Estado de Pagos por Obra" }), _jsx("p", { className: "text-sm text-gray-600", children: "Situaci\u00F3n financiera detallada de cada proyecto en ejecuci\u00F3n" })] }), _jsx("div", { className: "overflow-x-auto", children: _jsxs("table", { className: "w-full text-sm", children: [_jsx("thead", { children: _jsxs("tr", { className: "border-b border-gray-200", children: [_jsx("th", { className: "text-left py-3 px-4 font-medium text-gray-900", children: "Obra" }), _jsx("th", { className: "text-right py-3 px-4 font-medium text-gray-900", children: "Monto Contratado" }), _jsx("th", { className: "text-right py-3 px-4 font-medium text-gray-900", children: "Ejecutado" }), _jsx("th", { className: "text-right py-3 px-4 font-medium text-gray-900", children: "Pagado" }), _jsx("th", { className: "text-right py-3 px-4 font-medium text-gray-900", children: "Saldo Pendiente" }), _jsx("th", { className: "text-center py-3 px-4 font-medium text-gray-900", children: "Prom. Aprobaci\u00F3n" }), _jsx("th", { className: "text-center py-3 px-4 font-medium text-gray-900", children: "Prom. Pago" }), _jsx("th", { className: "text-center py-3 px-4 font-medium text-gray-900", children: "Estado" })] }) }), _jsx("tbody", { children: datos.estadoPagos.map((obra, index) => (_jsxs("tr", { className: "border-b border-gray-100 hover:bg-gray-50", children: [_jsxs("td", { className: "py-3 px-4", children: [_jsx("div", { className: "font-medium text-gray-900", children: obra.obraNombre }), _jsxs("div", { className: "text-xs text-gray-500", children: ["ID: ", obra.obraId] })] }), _jsx("td", { className: "py-3 px-4 text-right font-medium text-gray-900", children: formatearMoneda(obra.montoContratado) }), _jsx("td", { className: "py-3 px-4 text-right text-blue-600 font-medium", children: formatearMoneda(obra.montoEjecutado) }), _jsx("td", { className: "py-3 px-4 text-right text-green-600 font-medium", children: formatearMoneda(obra.montoPagado) }), _jsx("td", { className: "py-3 px-4 text-right", children: _jsx("span", { className: `font-medium ${obra.saldoPorPagar > 0 ? 'text-amber-600' : 'text-green-600'}`, children: formatearMoneda(obra.saldoPorPagar) }) }), _jsxs("td", { className: "py-3 px-4 text-center text-gray-600", children: [obra.diasPromedioAprobacion, " d\u00EDas"] }), _jsxs("td", { className: "py-3 px-4 text-center text-gray-600", children: [obra.diasPromedioPago, " d\u00EDas"] }), _jsx("td", { className: "py-3 px-4 text-center", children: _jsx("span", { className: `px-2 py-1 text-xs font-medium rounded-full ${obra.morosidad === 0 ? 'bg-green-100 text-green-800' :
                                                        obra.morosidad <= 5 ? 'bg-amber-100 text-amber-800' :
                                                            'bg-red-100 text-red-800'}`, children: obra.morosidad === 0 ? 'Al día' : `${obra.morosidad}d atraso` }) })] }, index))) }), _jsx("tfoot", { children: _jsxs("tr", { className: "border-t-2 border-gray-300 bg-gray-50", children: [_jsx("td", { className: "py-3 px-4 font-bold text-gray-900", children: "TOTALES" }), _jsx("td", { className: "py-3 px-4 text-right font-bold text-gray-900", children: formatearMoneda(datos.estadoPagos.reduce((sum, obra) => sum + obra.montoContratado, 0)) }), _jsx("td", { className: "py-3 px-4 text-right font-bold text-blue-600", children: formatearMoneda(datos.estadoPagos.reduce((sum, obra) => sum + obra.montoEjecutado, 0)) }), _jsx("td", { className: "py-3 px-4 text-right font-bold text-green-600", children: formatearMoneda(datos.estadoPagos.reduce((sum, obra) => sum + obra.montoPagado, 0)) }), _jsx("td", { className: "py-3 px-4 text-right font-bold text-amber-600", children: formatearMoneda(datos.estadoPagos.reduce((sum, obra) => sum + obra.saldoPorPagar, 0)) }), _jsxs("td", { colSpan: 3, className: "py-3 px-4 text-center text-gray-600", children: ["Promedio: ", Math.round(datos.estadoPagos.reduce((sum, obra) => sum + obra.diasPromedioPago, 0) / datos.estadoPagos.length), " d\u00EDas"] })] }) })] }) })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.7 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsxs("h3", { className: "text-lg font-semibold text-gray-900 mb-2 flex items-center", children: [_jsx(Calculator, { className: "w-5 h-5 text-blue-600 mr-2" }), "Indicadores Financieros Avanzados"] }), _jsx("p", { className: "text-sm text-gray-600", children: "M\u00E9tricas de rentabilidad, eficiencia y gesti\u00F3n financiera" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6", children: [_jsxs("div", { className: "bg-gradient-to-br from-purple-50 to-purple-100 p-4 rounded-lg", children: [_jsxs("h4", { className: "font-medium text-purple-900 mb-3 flex items-center", children: [_jsx(TrendingUp, { className: "w-4 h-4 mr-2" }), "Rentabilidad"] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-purple-700", children: "ROI:" }), _jsx("span", { className: "font-bold text-purple-900", children: formatearPorcentaje(datos.indicadores.roi) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-purple-700", children: "TIR:" }), _jsx("span", { className: "font-bold text-purple-900", children: formatearPorcentaje(datos.indicadores.tir) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-purple-700", children: "VAN:" }), _jsx("span", { className: "font-bold text-purple-900", children: formatearMoneda(datos.indicadores.van) })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-indigo-50 to-indigo-100 p-4 rounded-lg", children: [_jsxs("h4", { className: "font-medium text-indigo-900 mb-3 flex items-center", children: [_jsx(BarChartIcon, { className: "w-4 h-4 mr-2" }), "Eficiencia Operativa"] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-indigo-700", children: "Margen Operativo:" }), _jsx("span", { className: "font-bold text-indigo-900", children: formatearPorcentaje(datos.indicadores.margenOperativo) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-indigo-700", children: "Rotaci\u00F3n Activos:" }), _jsxs("span", { className: "font-bold text-indigo-900", children: [datos.indicadores.rotacionActivos.toFixed(1), "x"] })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-indigo-700", children: "Ciclo Efectivo:" }), _jsxs("span", { className: "font-bold text-indigo-900", children: [datos.indicadores.cicloEfectivo, " d\u00EDas"] })] })] })] }), _jsxs("div", { className: "bg-gradient-to-br from-emerald-50 to-emerald-100 p-4 rounded-lg", children: [_jsxs("h4", { className: "font-medium text-emerald-900 mb-3 flex items-center", children: [_jsx(Clock, { className: "w-4 h-4 mr-2" }), "Gesti\u00F3n de Flujos"] }), _jsxs("div", { className: "space-y-2", children: [_jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-emerald-700", children: "Flujo Mensual Prom.:" }), _jsx("span", { className: "font-bold text-emerald-900", children: formatearMoneda(datos.flujoEfectivo.reduce((sum, f) => sum + f.saldo, 0) / datos.flujoEfectivo.length) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-emerald-700", children: "Mejor Mes:" }), _jsx("span", { className: "font-bold text-emerald-900", children: formatearMoneda(Math.max(...datos.flujoEfectivo.map(f => f.saldo))) })] }), _jsxs("div", { className: "flex justify-between text-sm", children: [_jsx("span", { className: "text-emerald-700", children: "Tendencia:" }), _jsx("span", { className: `font-bold flex items-center ${datos.flujoEfectivo[datos.flujoEfectivo.length - 1].saldo > datos.flujoEfectivo[0].saldo
                                                            ? 'text-emerald-900' : 'text-red-600'}`, children: datos.flujoEfectivo[datos.flujoEfectivo.length - 1].saldo > datos.flujoEfectivo[0].saldo ? (_jsxs(_Fragment, { children: ["Mejorando ", _jsx(ArrowUpRight, { className: "w-3 h-3 ml-1" })] })) : (_jsxs(_Fragment, { children: ["Decreciendo ", _jsx(ArrowDownRight, { className: "w-3 h-3 ml-1" })] })) })] })] })] })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.8 }, className: "bg-white p-6 rounded-xl shadow-lg border border-gray-200", children: [_jsxs("div", { className: "mb-6", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-2", children: "Proyecciones de Flujo Futuro" }), _jsx("p", { className: "text-sm text-gray-600", children: "Estimaci\u00F3n de ingresos futuros basada en avance de obras y probabilidades" })] }), _jsx("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4 mb-6", children: datos.proyecciones.flujoProyectado.map((proyeccion, index) => (_jsxs("div", { className: "bg-gray-50 p-4 rounded-lg", children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("h4", { className: "font-medium text-gray-900", children: proyeccion.periodo }), _jsxs("span", { className: `px-2 py-1 text-xs font-medium rounded-full ${proyeccion.probabilidad >= 0.8 ? 'bg-green-100 text-green-800' :
                                                proyeccion.probabilidad >= 0.6 ? 'bg-amber-100 text-amber-800' :
                                                    'bg-red-100 text-red-800'}`, children: [formatearPorcentaje(proyeccion.probabilidad * 100), " prob."] })] }), _jsx("p", { className: "text-xl font-bold text-blue-600", children: formatearMoneda(proyeccion.montoProyectado) })] }, index))) }), _jsxs("div", { className: "bg-blue-50 p-4 rounded-lg", children: [_jsx("h4", { className: "font-medium text-blue-900 mb-2", children: "Resumen de Proyecciones" }), _jsxs("p", { className: "text-sm text-blue-700", children: ["Total proyectado (pr\u00F3ximos 3 meses): ", _jsx("span", { className: "font-bold", children: formatearMoneda(datos.proyecciones.flujoProyectado.reduce((sum, p) => sum + p.montoProyectado, 0)) })] }), _jsxs("p", { className: "text-sm text-blue-700 mt-1", children: ["Probabilidad promedio de \u00E9xito: ", _jsx("span", { className: "font-bold", children: formatearPorcentaje(datos.proyecciones.flujoProyectado.reduce((sum, p) => sum + p.probabilidad, 0) / datos.proyecciones.flujoProyectado.length * 100) })] })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.9 }, className: "bg-gray-50 p-6 rounded-xl border border-gray-200 text-center text-sm text-gray-600", children: [_jsxs("p", { children: ["Reporte generado el ", new Date().toLocaleDateString('es-PE'), " a las ", new Date().toLocaleTimeString('es-PE')] }), _jsx("p", { className: "mt-1", children: "Sistema de Gesti\u00F3n de Valorizaciones - An\u00E1lisis Financiero Consolidado" })] })] }));
};
export default ReporteFinanciero;
