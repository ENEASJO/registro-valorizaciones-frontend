import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { useState, useEffect } from 'react';
import { motion } from 'framer-motion';
import { ArrowLeft, FileText, Download, Edit, CheckCircle, Clock, AlertTriangle, DollarSign, Calendar, User, Building, Calculator, GitBranch, Paperclip, MessageSquare, TrendingUp, Archive } from 'lucide-react';
import { useValorizaciones } from '../../../hooks/useValorizaciones';
import { useObras } from '../../../hooks/useObras';
import { useEntidadesContratistas } from '../../../hooks/useEmpresas';
import TablaPartidas from './TablaPartidas';
const DetalleValorizacion = ({ valorizacionId, tipo, onBack }) => {
    const [showCambioEstado, setShowCambioEstado] = useState(false);
    const [nuevoEstado, setNuevoEstado] = useState('');
    const [observaciones, setObservaciones] = useState('');
    const [showPartidas, setShowPartidas] = useState(false);
    const [activeTab, setActiveTab] = useState('general');
    // Hooks
    const { valorizacionesEjecucion, valorizacionesSupervision, cambiarEstadoValorizacion, formatearMoneda, partidas, cargarPartidasPorObra, loading } = useValorizaciones();
    const { obtenerObraPorId } = useObras();
    const { entidades } = useEntidadesContratistas();
    // Buscar la valorización
    const valorizacion = tipo === 'ejecucion'
        ? valorizacionesEjecucion.find(v => v.id === valorizacionId)
        : valorizacionesSupervision.find(v => v.id === valorizacionId);
    const obra = valorizacion ? obtenerObraPorId(valorizacion.obra_id) : null;
    // Cargar partidas si es valorización de ejecución
    useEffect(() => {
        if (valorizacion && tipo === 'ejecucion') {
            cargarPartidasPorObra(valorizacion.obra_id);
        }
    }, [valorizacion, tipo, cargarPartidasPorObra]);
    // Obtener entidad ejecutora
    const entidadEjecutora = obra ? entidades.find(e => e.id === obra.entidad_ejecutora_id) : null;
    const entidadSupervisora = obra ? entidades.find(e => e.id === obra.entidad_supervisora_id) : null;
    // Función para obtener icono de estado
    const getEstadoIcon = (estado) => {
        switch (estado.toUpperCase()) {
            case 'APROBADA':
                return _jsx(CheckCircle, { className: "w-5 h-5 text-green-500" });
            case 'EN_REVISION':
            case 'PRESENTADA':
                return _jsx(Clock, { className: "w-5 h-5 text-yellow-500" });
            case 'BORRADOR':
                return _jsx(Edit, { className: "w-5 h-5 text-gray-500" });
            case 'OBSERVADA':
                return _jsx(AlertTriangle, { className: "w-5 h-5 text-orange-500" });
            case 'PAGADA':
                return _jsx(DollarSign, { className: "w-5 h-5 text-blue-500" });
            case 'RECHAZADA':
                return _jsx(Archive, { className: "w-5 h-5 text-red-500" });
            default:
                return _jsx(Clock, { className: "w-5 h-5 text-gray-500" });
        }
    };
    // Función para obtener color de estado
    const getEstadoColor = (estado) => {
        switch (estado.toUpperCase()) {
            case 'APROBADA':
                return 'bg-green-100 text-green-800 border-green-200';
            case 'EN_REVISION':
            case 'PRESENTADA':
                return 'bg-yellow-100 text-yellow-800 border-yellow-200';
            case 'BORRADOR':
                return 'bg-gray-100 text-gray-800 border-gray-200';
            case 'OBSERVADA':
                return 'bg-orange-100 text-orange-800 border-orange-200';
            case 'PAGADA':
                return 'bg-blue-100 text-blue-800 border-blue-200';
            case 'RECHAZADA':
                return 'bg-red-100 text-red-800 border-red-200';
            default:
                return 'bg-gray-100 text-gray-800 border-gray-200';
        }
    };
    // Función para cambiar estado
    const handleCambiarEstado = async () => {
        if (!valorizacion || !nuevoEstado)
            return;
        try {
            await cambiarEstadoValorizacion(valorizacion.id, nuevoEstado, observaciones);
            setShowCambioEstado(false);
            setNuevoEstado('');
            setObservaciones('');
        }
        catch (error) {
            console.error('Error al cambiar estado:', error);
        }
    };
    // Obtener estados disponibles para transición
    const getEstadosDisponibles = () => {
        if (!valorizacion)
            return [];
        const estadoActual = valorizacion.estado;
        if (tipo === 'ejecucion') {
            switch (estadoActual) {
                case 'BORRADOR':
                    return ['PRESENTADA'];
                case 'PRESENTADA':
                    return ['EN_REVISION', 'OBSERVADA'];
                case 'EN_REVISION':
                    return ['APROBADA', 'OBSERVADA'];
                case 'OBSERVADA':
                    return ['PRESENTADA', 'RECHAZADA'];
                case 'APROBADA':
                    return ['PAGADA'];
                default:
                    return [];
            }
        }
        else {
            switch (estadoActual) {
                case 'BORRADOR':
                    return ['PRESENTADA'];
                case 'PRESENTADA':
                    return ['APROBADA', 'RECHAZADA'];
                case 'APROBADA':
                    return ['PAGADA'];
                default:
                    return [];
            }
        }
    };
    if (!valorizacion || !obra) {
        return (_jsx("div", { className: "flex justify-center items-center py-12", children: _jsxs("div", { className: "text-center", children: [_jsx(AlertTriangle, { className: "w-12 h-12 text-red-500 mx-auto mb-4" }), _jsx("p", { className: "text-red-600 font-medium", children: "Valorizaci\u00F3n no encontrada" }), _jsx("button", { onClick: onBack, className: "btn-primary mt-4", children: "Volver" })] }) }));
    }
    return (_jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "flex items-center justify-between", children: [_jsxs("div", { className: "flex items-center gap-4", children: [_jsxs("button", { onClick: onBack, className: "btn-secondary flex items-center gap-2", children: [_jsx(ArrowLeft, { className: "w-4 h-4" }), "Volver"] }), _jsxs("div", { children: [_jsxs("h1", { className: "text-3xl font-bold text-gray-900 flex items-center gap-3", children: ["Valorizaci\u00F3n N\u00B0 ", valorizacion.numero_valorización, _jsxs("span", { className: `px-3 py-1 text-sm font-medium rounded-full border ${getEstadoColor(valorizacion.estado)}`, children: [getEstadoIcon(valorizacion.estado), _jsx("span", { className: "ml-2", children: valorizacion.estado.replace('_', ' ') })] })] }), _jsxs("p", { className: "text-gray-600 mt-1", children: [tipo === 'ejecucion' ? 'Valorización de Ejecución' : 'Valorización de Supervisión', " -", obra.numero_contrato] })] })] }), _jsxs("div", { className: "flex gap-3", children: [getEstadosDisponibles().length > 0 && (_jsxs("button", { onClick: () => setShowCambioEstado(true), className: "btn-secondary flex items-center gap-2", children: [_jsx(Edit, { className: "w-4 h-4" }), "Cambiar Estado"] })), _jsxs("button", { className: "btn-secondary flex items-center gap-2", children: [_jsx(Download, { className: "w-4 h-4" }), "Descargar PDF"] }), _jsxs("button", { className: "btn-primary flex items-center gap-2", children: [_jsx(FileText, { className: "w-4 h-4" }), "Ver Expediente"] })] })] }), valorizacion.dias_atraso > 0 && (_jsx(motion.div, { initial: { opacity: 0, y: -10 }, animate: { opacity: 1, y: 0 }, className: "card border-red-200 bg-red-50", children: _jsxs("div", { className: "flex items-start gap-3", children: [_jsx(AlertTriangle, { className: "w-5 h-5 text-red-500 mt-0.5" }), _jsxs("div", { children: [_jsx("h3", { className: "font-medium text-red-800", children: "Valorizaci\u00F3n con Atraso" }), _jsxs("p", { className: "text-sm text-red-700 mt-1", children: ["Esta valorizaci\u00F3n tiene ", valorizacion.dias_atraso, " d\u00EDas de atraso en el proceso de pago."] })] })] }) })), _jsx("div", { className: "border-b border-gray-200", children: _jsxs("nav", { className: "-mb-px flex space-x-8", children: [_jsx("button", { onClick: () => setActiveTab('general'), className: `whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'general'
                                ? 'border-primary-500 text-primary-600'
                                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`, children: "Informaci\u00F3n General" }), tipo === 'ejecucion' && (_jsx("button", { onClick: () => setActiveTab('partidas'), className: `whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'partidas'
                                ? 'border-primary-500 text-primary-600'
                                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`, children: "Partidas Valorizadas" })), _jsx("button", { onClick: () => setActiveTab('historial'), className: `whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'historial'
                                ? 'border-primary-500 text-primary-600'
                                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`, children: "Historial" }), _jsx("button", { onClick: () => setActiveTab('documentos'), className: `whitespace-nowrap py-4 px-1 border-b-2 font-medium text-sm ${activeTab === 'documentos'
                                ? 'border-primary-500 text-primary-600'
                                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'}`, children: "Documentos" })] }) }), activeTab === 'general' && (_jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-3 gap-6", children: [_jsxs("div", { className: "lg:col-span-2 space-y-6", children: [_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(Building, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Informaci\u00F3n de la Obra" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Nombre de la Obra" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: obra.nombre })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "N\u00FAmero de Contrato" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: obra.numero_contrato })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Entidad Ejecutora" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: entidadEjecutora?.nombre_completo || 'No disponible' })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Entidad Supervisora" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: entidadSupervisora?.nombre_completo || 'No disponible' })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Monto Contractual" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 font-semibold", children: tipo === 'ejecucion'
                                                            ? formatearMoneda(obra.monto_ejecucion)
                                                            : formatearMoneda(obra.monto_supervision) })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Estado de la Obra" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: obra.estado.replace('_', ' ') })] })] })] }), _jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(Calendar, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Periodo de Valorizaci\u00F3n" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-3 gap-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Fecha Inicio" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: new Date(valorizacion.periodo_inicio).toLocaleDateString('es-PE') })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Fecha Fin" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: new Date(valorizacion.periodo_fin).toLocaleDateString('es-PE') })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "D\u00EDas del Periodo" }), _jsxs("p", { className: "mt-1 text-sm text-gray-900", children: ['dias_periodo' in valorizacion
                                                                ? valorizacion.dias_periodo
                                                                : 'dias_calendario_periodo' in valorizacion
                                                                    ? valorizacion.dias_calendario_periodo
                                                                    : 0, " d\u00EDas"] })] }), tipo === 'supervision' && 'dias_efectivos_trabajados' in valorizacion && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "D\u00EDas Efectivos" }), _jsxs("p", { className: "mt-1 text-sm text-gray-900 font-semibold", children: [valorizacion.dias_efectivos_trabajados, " d\u00EDas"] })] }))] })] }), _jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(User, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Personal Responsable" })] }), _jsxs("div", { className: "grid grid-cols-1 md:grid-cols-2 gap-4", children: [tipo === 'ejecucion' && 'residente_obra' in valorizacion && (_jsxs(_Fragment, { children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Residente de Obra" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: valorizacion.residente_obra || 'No especificado' })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Supervisor de Obra" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: valorizacion.supervisor_obra || 'No especificado' })] })] })), tipo === 'supervision' && 'supervisor_responsable' in valorizacion && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Supervisor Responsable" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: valorizacion.supervisor_responsable || 'No especificado' })] })), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Responsable de Entidad" }), _jsx("p", { className: "mt-1 text-sm text-gray-900", children: valorizacion.responsable_entidad || 'No especificado' })] })] })] }), _jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(MessageSquare, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Observaciones" })] }), _jsxs("div", { className: "space-y-4", children: [tipo === 'ejecucion' && 'observaciones_residente' in valorizacion && (_jsxs(_Fragment, { children: [valorizacion.observaciones_residente && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Observaciones del Residente" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.observaciones_residente })] })), valorizacion.observaciones_supervisor && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Observaciones del Supervisor" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.observaciones_supervisor })] })), valorizacion.observaciones_entidad && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Observaciones de la Entidad" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.observaciones_entidad })] })), valorizacion.motivo_rechazo && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-red-700", children: "Motivo de Rechazo" }), _jsx("p", { className: "mt-1 text-sm text-red-800 bg-red-50 p-3 rounded-lg border border-red-200", children: valorizacion.motivo_rechazo })] }))] })), tipo === 'supervision' && 'observaciones_periodo' in valorizacion && (_jsxs(_Fragment, { children: [valorizacion.observaciones_periodo && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Observaciones del Periodo" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.observaciones_periodo })] })), valorizacion.actividades_realizadas && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Actividades Realizadas" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.actividades_realizadas })] })), valorizacion.motivos_dias_no_trabajados && (_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700", children: "Motivos D\u00EDas No Trabajados" }), _jsx("p", { className: "mt-1 text-sm text-gray-900 bg-gray-50 p-3 rounded-lg", children: valorizacion.motivos_dias_no_trabajados })] }))] })), !('observaciones_residente' in valorizacion) &&
                                                !('observaciones_periodo' in valorizacion) && (_jsx("p", { className: "text-sm text-gray-500 italic", children: "No hay observaciones registradas" }))] })] })] }), _jsxs("div", { className: "space-y-6", children: [_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(Calculator, { className: "w-5 h-5 text-gray-500" }), _jsx("h3", { className: "text-lg font-semibold text-gray-900", children: "Resumen Econ\u00F3mico" })] }), _jsxs("div", { className: "space-y-3", children: [_jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Monto Bruto" }), _jsx("span", { className: "font-semibold text-gray-900", children: formatearMoneda(valorizacion.monto_bruto) })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Deducciones" }), _jsxs("span", { className: "font-semibold text-red-600", children: ["- ", formatearMoneda(valorizacion.total_deducciones)] })] }), _jsx("hr", { className: "my-2" }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm font-medium text-gray-700", children: "Monto Neto" }), _jsx("span", { className: "font-bold text-green-600", children: formatearMoneda(valorizacion.monto_neto) })] }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-sm text-gray-600", children: "IGV (18%)" }), _jsx("span", { className: "font-semibold text-gray-900", children: formatearMoneda(valorizacion.igv_monto) })] }), _jsx("hr", { className: "my-2" }), _jsxs("div", { className: "flex justify-between items-center", children: [_jsx("span", { className: "text-base font-medium text-gray-900", children: "Total con IGV" }), _jsx("span", { className: "font-bold text-blue-600 text-lg", children: formatearMoneda(valorizacion.monto_neto + valorizacion.igv_monto) })] })] })] }), _jsxs("div", { className: "card", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Desglose de Deducciones" }), _jsxs("div", { className: "space-y-3", children: [tipo === 'ejecucion' && 'adelanto_directo_monto' in valorizacion && (_jsxs(_Fragment, { children: [valorizacion.adelanto_directo_monto > 0 && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsxs("span", { className: "text-gray-600", children: ["Adelanto Directo (", valorizacion.adelanto_directo_porcentaje, "%)"] }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(valorizacion.adelanto_directo_monto) })] })), valorizacion.adelanto_materiales_monto > 0 && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsxs("span", { className: "text-gray-600", children: ["Adelanto Materiales (", valorizacion.adelanto_materiales_porcentaje, "%)"] }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(valorizacion.adelanto_materiales_monto) })] }))] })), _jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsxs("span", { className: "text-gray-600", children: ["Retenci\u00F3n Garant\u00EDa (", valorizacion.retencion_garantia_porcentaje, "%)"] }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(valorizacion.retencion_garantia_monto) })] }), valorizacion.penalidades_monto > 0 && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Penalidades" }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(valorizacion.penalidades_monto) })] })), valorizacion.otras_deducciones_monto > 0 && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Otras Deducciones" }), _jsx("span", { className: "font-medium text-gray-900", children: formatearMoneda(valorizacion.otras_deducciones_monto) })] }))] })] }), _jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(GitBranch, { className: "w-5 h-5 text-gray-500" }), _jsx("h3", { className: "text-lg font-semibold text-gray-900", children: "GitBranch del Proceso" })] }), _jsxs("div", { className: "space-y-3", children: [valorizacion.fecha_presentacion && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Presentaci\u00F3n" }), _jsx("span", { className: "font-medium text-gray-900", children: new Date(valorizacion.fecha_presentacion).toLocaleDateString('es-PE') })] })), tipo === 'ejecucion' && 'fecha_revision' in valorizacion && valorizacion.fecha_revision && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Revisi\u00F3n" }), _jsx("span", { className: "font-medium text-gray-900", children: new Date(valorizacion.fecha_revision).toLocaleDateString('es-PE') })] })), valorizacion.fecha_aprobacion && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Aprobaci\u00F3n" }), _jsx("span", { className: "font-medium text-gray-900", children: new Date(valorizacion.fecha_aprobacion).toLocaleDateString('es-PE') })] })), tipo === 'ejecucion' && 'fecha_limite_pago' in valorizacion && valorizacion.fecha_limite_pago && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "L\u00EDmite de Pago" }), _jsx("span", { className: `font-medium ${new Date(valorizacion.fecha_limite_pago) < new Date() && !valorizacion.fecha_pago
                                                            ? 'text-red-600'
                                                            : 'text-gray-900'}`, children: new Date(valorizacion.fecha_limite_pago).toLocaleDateString('es-PE') })] })), valorizacion.fecha_pago && (_jsxs("div", { className: "flex justify-between items-center text-sm", children: [_jsx("span", { className: "text-gray-600", children: "Pago" }), _jsx("span", { className: "font-medium text-green-600", children: new Date(valorizacion.fecha_pago).toLocaleDateString('es-PE') })] }))] })] }), tipo === 'ejecucion' && 'porcentaje_avance_fisico_total' in valorizacion && (_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(TrendingUp, { className: "w-5 h-5 text-gray-500" }), _jsx("h3", { className: "text-lg font-semibold text-gray-900", children: "Avance de Obra" })] }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsxs("div", { className: "flex justify-between items-center mb-2", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Avance F\u00EDsico Total" }), _jsxs("span", { className: "font-semibold text-gray-900", children: [valorizacion.porcentaje_avance_fisico_total.toFixed(2), "%"] })] }), _jsx("div", { className: "w-full bg-gray-200 rounded-full h-3", children: _jsx("div", { className: "bg-gradient-to-r from-blue-500 to-blue-600 h-3 rounded-full", style: { width: `${Math.min(valorizacion.porcentaje_avance_fisico_total, 100)}%` } }) })] }), _jsxs("div", { children: [_jsxs("div", { className: "flex justify-between items-center mb-1", children: [_jsx("span", { className: "text-sm text-gray-600", children: "Avance Econ\u00F3mico" }), _jsx("span", { className: "font-semibold text-gray-900", children: formatearMoneda(valorizacion.monto_avance_economico_total) })] }), _jsxs("div", { className: "text-xs text-gray-500", children: ["de ", formatearMoneda(obra.monto_ejecucion), " contractuales"] })] })] })] }))] })] })), activeTab === 'partidas' && tipo === 'ejecucion' && (_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(FileText, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Partidas Valorizadas" })] }), _jsx(TablaPartidas, { partidas: partidas, partidasSeleccionadas: [], onAgregarPartida: () => { }, onQuitarPartida: () => { }, readonly: true, showCalculations: false })] })), activeTab === 'historial' && (_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(GitBranch, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Historial de Cambios" })] }), _jsxs("div", { className: "text-center py-8 text-gray-500", children: [_jsx(GitBranch, { className: "w-12 h-12 mx-auto mb-2 opacity-50" }), _jsx("p", { children: "Historial de cambios no implementado a\u00FAn" })] })] })), activeTab === 'documentos' && (_jsxs("div", { className: "card", children: [_jsxs("div", { className: "flex items-center gap-2 mb-4", children: [_jsx(Paperclip, { className: "w-5 h-5 text-gray-500" }), _jsx("h2", { className: "text-xl font-semibold text-gray-900", children: "Documentos Adjuntos" })] }), _jsxs("div", { className: "text-center py-8 text-gray-500", children: [_jsx(Paperclip, { className: "w-12 h-12 mx-auto mb-2 opacity-50" }), _jsx("p", { children: "Gesti\u00F3n de documentos no implementada a\u00FAn" })] })] })), showCambioEstado && (_jsx("div", { className: "fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50", children: _jsxs(motion.div, { initial: { opacity: 0, scale: 0.95 }, animate: { opacity: 1, scale: 1 }, className: "bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4", children: [_jsx("h3", { className: "text-lg font-semibold text-gray-900 mb-4", children: "Cambiar Estado de Valorizaci\u00F3n" }), _jsxs("div", { className: "space-y-4", children: [_jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Nuevo Estado" }), _jsxs("select", { value: nuevoEstado, onChange: (e) => setNuevoEstado(e.target.value), className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500", children: [_jsx("option", { value: "", children: "Seleccionar estado..." }), getEstadosDisponibles().map(estado => (_jsx("option", { value: estado, children: estado.replace('_', ' ') }, estado)))] })] }), _jsxs("div", { children: [_jsx("label", { className: "block text-sm font-medium text-gray-700 mb-1", children: "Observaciones" }), _jsx("textarea", { value: observaciones, onChange: (e) => setObservaciones(e.target.value), rows: 3, placeholder: "Motivo del cambio de estado...", className: "w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500" })] })] }), _jsxs("div", { className: "flex gap-3 mt-6", children: [_jsx("button", { onClick: () => setShowCambioEstado(false), className: "flex-1 btn-secondary", children: "Cancelar" }), _jsx("button", { onClick: handleCambiarEstado, disabled: !nuevoEstado || loading, className: "flex-1 btn-primary disabled:opacity-50", children: loading ? 'Cambiando...' : 'Confirmar' })] })] }) }))] }));
};
export default DetalleValorizacion;
