import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { motion } from 'framer-motion';
import { useState } from 'react';
import { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, } from 'recharts';
import { Sun, Moon, RefreshCw, Calendar, Clock, Zap, Award, Target, Users, Activity, Settings } from 'lucide-react';
// Importar componentes personalizados
import { MetricCard, AlertPanel, PerformanceGauge, TimelineObras, MapaCalor } from './components';
// Importar hook personalizado
import useDashboard from '../../hooks/useDashboard';
const Dashboard = () => {
    const [isDarkMode, setIsDarkMode] = useState(false);
    const [isRefreshing, setIsRefreshing] = useState(false);
    // Usar el hook personalizado para obtener todos los datos
    const { lastUpdate, currentPeriod, setCurrentPeriod, metrics, alerts, contratistasRanking, valorizacionesProximas, inversionTiempo, distributionData, markAlertAsRead, getDistrictHeatMapData, formatCurrency, getTimelineData, totalInversion, obrasActivas, eficienciaGeneral, alertasCriticas } = useDashboard();
    const handleRefresh = async () => {
        setIsRefreshing(true);
        // Simular actualización de datos
        await new Promise(resolve => setTimeout(resolve, 1500));
        setIsRefreshing(false);
    };
    const toggleDarkMode = () => {
        setIsDarkMode(!isDarkMode);
        document.documentElement.classList.toggle('dark');
    };
    // Datos para gráficos
    const timelineData = getTimelineData();
    const heatMapData = getDistrictHeatMapData();
    // Colores para gráfico de distribución
    const COLORS = ['#8B5CF6', '#06B6D4', '#10B981', '#F59E0B', '#EF4444'];
    // Función para saludar según la hora
    const getGreeting = () => {
        const hour = new Date().getHours();
        if (hour < 12)
            return 'Buenos días';
        if (hour < 18)
            return 'Buenas tardes';
        return 'Buenas noches';
    };
    const containerClass = `min-h-screen transition-colors duration-300 ${isDarkMode ? 'bg-gray-900 text-white' : 'bg-gradient-to-br from-blue-50 via-white to-purple-50'}`;
    return (_jsx("div", { className: containerClass, children: _jsxs("div", { className: "space-y-8 p-6", children: [_jsxs(motion.div, { initial: { opacity: 0, y: -20 }, animate: { opacity: 1, y: 0 }, className: "relative overflow-hidden", children: [_jsx("div", { className: "absolute inset-0 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 opacity-10 animate-pulse" }), _jsxs("div", { className: "relative p-8 rounded-3xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-2xl", children: [_jsxs("div", { className: "flex flex-col lg:flex-row lg:items-center lg:justify-between gap-6", children: [_jsxs("div", { className: "space-y-2", children: [_jsxs(motion.h1, { className: "text-4xl font-bold bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent", animate: {
                                                        backgroundPosition: ['0% 50%', '100% 50%', '0% 50%']
                                                    }, transition: {
                                                        duration: 3,
                                                        repeat: Infinity,
                                                        ease: "easeInOut"
                                                    }, children: [getGreeting(), ", Administrador"] }), _jsxs("div", { className: "flex items-center gap-4 text-gray-600", children: [_jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Calendar, { className: "w-4 h-4" }), _jsx("span", { className: "font-medium", children: new Date().toLocaleDateString('es-ES', {
                                                                        weekday: 'long',
                                                                        year: 'numeric',
                                                                        month: 'long',
                                                                        day: 'numeric'
                                                                    }) })] }), _jsxs("div", { className: "flex items-center gap-2", children: [_jsx(Clock, { className: "w-4 h-4" }), _jsxs("span", { children: ["\u00DAltima actualizaci\u00F3n: ", lastUpdate.toLocaleTimeString('es-ES')] })] })] })] }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsx("div", { className: "flex items-center gap-1 p-1 bg-gray-100 rounded-lg", children: ['today', 'week', 'month', 'year'].map((period) => (_jsxs("button", { onClick: () => setCurrentPeriod(period), className: `px-3 py-2 text-sm font-medium rounded-md transition-all ${currentPeriod === period
                                                            ? 'bg-white text-gray-900 shadow-sm'
                                                            : 'text-gray-600 hover:text-gray-900'}`, children: [period === 'today' && 'Hoy', period === 'week' && 'Semana', period === 'month' && 'Mes', period === 'year' && 'Año'] }, period))) }), _jsx(motion.button, { whileHover: { scale: 1.05 }, whileTap: { scale: 0.95 }, onClick: handleRefresh, disabled: isRefreshing, className: "p-3 bg-blue-600 text-white rounded-xl shadow-lg hover:bg-blue-700 transition-colors disabled:opacity-50", children: _jsx(RefreshCw, { className: `w-5 h-5 ${isRefreshing ? 'animate-spin' : ''}` }) }), _jsx(motion.button, { whileHover: { scale: 1.05 }, whileTap: { scale: 0.95 }, onClick: toggleDarkMode, className: "p-3 bg-gray-200 text-gray-700 rounded-xl shadow-lg hover:bg-gray-300 transition-colors", children: isDarkMode ? _jsx(Sun, { className: "w-5 h-5" }) : _jsx(Moon, { className: "w-5 h-5" }) })] })] }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.3 }, className: "grid grid-cols-2 md:grid-cols-4 gap-4 mt-6", children: [_jsxs("div", { className: "text-center p-3 bg-blue-50 rounded-lg", children: [_jsx(Zap, { className: "w-5 h-5 text-blue-600 mx-auto mb-1" }), _jsxs("div", { className: "text-xl font-bold text-blue-600", children: [eficienciaGeneral, "%"] }), _jsx("div", { className: "text-xs text-gray-600", children: "Eficiencia" })] }), _jsxs("div", { className: "text-center p-3 bg-purple-50 rounded-lg", children: [_jsx(Target, { className: "w-5 h-5 text-purple-600 mx-auto mb-1" }), _jsx("div", { className: "text-xl font-bold text-purple-600", children: obrasActivas }), _jsx("div", { className: "text-xs text-gray-600", children: "Obras Activas" })] }), _jsxs("div", { className: "text-center p-3 bg-green-50 rounded-lg", children: [_jsx(Award, { className: "w-5 h-5 text-green-600 mx-auto mb-1" }), _jsx("div", { className: "text-xl font-bold text-green-600", children: formatCurrency(Number(totalInversion)).replace('PEN', '').trim() }), _jsx("div", { className: "text-xs text-gray-600", children: "Inversi\u00F3n Total" })] }), _jsxs("div", { className: "text-center p-3 bg-red-50 rounded-lg", children: [_jsx(Activity, { className: "w-5 h-5 text-red-600 mx-auto mb-1" }), _jsx("div", { className: "text-xl font-bold text-red-600", children: alertasCriticas }), _jsx("div", { className: "text-xs text-gray-600", children: "Alertas Cr\u00EDticas" })] })] })] })] }), _jsx("div", { className: "grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-6 gap-6", children: metrics.map((metric, index) => (_jsx(MetricCard, { metric: metric, index: index }, metric.id))) }), _jsxs("div", { className: "grid grid-cols-1 xl:grid-cols-3 gap-8", children: [_jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.6 }, className: "xl:col-span-2 p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: [_jsxs("div", { className: "flex items-center justify-between mb-6", children: [_jsx("h3", { className: "text-xl font-semibold text-gray-900", children: "Evoluci\u00F3n de Inversi\u00F3n" }), _jsxs("div", { className: "flex items-center gap-2 text-sm", children: [_jsxs("div", { className: "flex items-center gap-1", children: [_jsx("div", { className: "w-3 h-3 bg-blue-500 rounded-full" }), _jsx("span", { children: "Presupuestado" })] }), _jsxs("div", { className: "flex items-center gap-1", children: [_jsx("div", { className: "w-3 h-3 bg-purple-500 rounded-full" }), _jsx("span", { children: "Ejecutado" })] }), _jsxs("div", { className: "flex items-center gap-1", children: [_jsx("div", { className: "w-3 h-3 bg-green-500 rounded-full" }), _jsx("span", { children: "Valorizado" })] })] })] }), _jsx("div", { className: "h-80", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(AreaChart, { data: inversionTiempo, children: [_jsxs("defs", { children: [_jsxs("linearGradient", { id: "colorPresupuestado", x1: "0", y1: "0", x2: "0", y2: "1", children: [_jsx("stop", { offset: "5%", stopColor: "#3B82F6", stopOpacity: 0.8 }), _jsx("stop", { offset: "95%", stopColor: "#3B82F6", stopOpacity: 0.1 })] }), _jsxs("linearGradient", { id: "colorEjecutado", x1: "0", y1: "0", x2: "0", y2: "1", children: [_jsx("stop", { offset: "5%", stopColor: "#8B5CF6", stopOpacity: 0.8 }), _jsx("stop", { offset: "95%", stopColor: "#8B5CF6", stopOpacity: 0.1 })] }), _jsxs("linearGradient", { id: "colorValorizacion", x1: "0", y1: "0", x2: "0", y2: "1", children: [_jsx("stop", { offset: "5%", stopColor: "#10B981", stopOpacity: 0.8 }), _jsx("stop", { offset: "95%", stopColor: "#10B981", stopOpacity: 0.1 })] })] }), _jsx(CartesianGrid, { strokeDasharray: "3 3", stroke: "#E5E7EB" }), _jsx(XAxis, { dataKey: "mes", axisLine: false, tickLine: false, tick: { fontSize: 12, fill: '#6B7280' } }), _jsx(YAxis, { axisLine: false, tickLine: false, tick: { fontSize: 12, fill: '#6B7280' }, tickFormatter: (value) => `${(value / 1000000).toFixed(1)}M` }), _jsx(Tooltip, { contentStyle: {
                                                        backgroundColor: '#1F2937',
                                                        border: 'none',
                                                        borderRadius: '12px',
                                                        color: '#F9FAFB'
                                                    }, formatter: (value) => [formatCurrency(Number(value)), ''] }), _jsx(Area, { type: "monotone", dataKey: "presupuestado", stroke: "#3B82F6", strokeWidth: 3, fillOpacity: 1, fill: "url(#colorPresupuestado)" }), _jsx(Area, { type: "monotone", dataKey: "ejecutado", stroke: "#8B5CF6", strokeWidth: 3, fillOpacity: 1, fill: "url(#colorEjecutado)" }), _jsx(Area, { type: "monotone", dataKey: "valorizacion", stroke: "#10B981", strokeWidth: 3, fillOpacity: 1, fill: "url(#colorValorizacion)" })] }) }) })] }), _jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 0.7 }, className: "p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: _jsx(PerformanceGauge, { value: eficienciaGeneral, title: "Eficiencia General", subtitle: "Obras en tiempo vs total", size: "md", animated: true }) })] }), _jsxs("div", { className: "grid grid-cols-1 lg:grid-cols-2 gap-8", children: [_jsxs(motion.div, { initial: { opacity: 0, x: -20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.8 }, className: "p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: [_jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-6", children: "Distribuci\u00F3n por Categor\u00EDa" }), _jsx("div", { className: "h-80", children: _jsx(ResponsiveContainer, { width: "100%", height: "100%", children: _jsxs(PieChart, { children: [_jsx(Pie, { data: distributionData, cx: "50%", cy: "50%", outerRadius: 100, dataKey: "valor", label: ({ categoria, porcentaje }) => `${categoria} ${porcentaje}%`, labelLine: false, children: distributionData.map((_, index) => (_jsx(Cell, { fill: COLORS[index % COLORS.length] }, `cell-${index}`))) }), _jsx(Tooltip, { formatter: (value) => [formatCurrency(Number(value)), 'Inversión'] })] }) }) })] }), _jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.9 }, className: "p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: [_jsx("h3", { className: "text-xl font-semibold text-gray-900 mb-6", children: "Top 5 Contratistas" }), _jsx("div", { className: "space-y-4", children: contratistasRanking.map((contratista, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 0.9 + index * 0.1 }, className: "flex items-center gap-4 p-4 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors", children: [_jsx("div", { className: `w-8 h-8 rounded-full flex items-center justify-center font-bold text-white ${index === 0 ? 'bg-yellow-500' :
                                                    index === 1 ? 'bg-gray-400' :
                                                        index === 2 ? 'bg-amber-600' :
                                                            'bg-blue-500'}`, children: index + 1 }), _jsxs("div", { className: "flex-1 min-w-0", children: [_jsx("p", { className: "font-medium text-gray-900 truncate", children: contratista.nombre }), _jsxs("p", { className: "text-sm text-gray-500", children: [contratista.obrasCompletadas, " obras \u2022 ", contratista.eficiencia, "% eficiencia"] })] }), _jsxs("div", { className: "text-right", children: [_jsx("p", { className: "font-semibold text-gray-900", children: formatCurrency(contratista.valorTotal) }), _jsx("div", { className: `text-xs flex items-center gap-1 ${contratista.change > 0 ? 'text-green-600' :
                                                            contratista.change < 0 ? 'text-red-600' :
                                                                'text-gray-500'}`, children: contratista.change !== 0 && (_jsxs("span", { children: [contratista.change > 0 ? '↑' : '↓', " ", Math.abs(contratista.change)] })) })] })] }, contratista.id))) })] })] }), _jsxs("div", { className: "grid grid-cols-1 xl:grid-cols-3 gap-8", children: [_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 1.0 }, className: "p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: _jsx(AlertPanel, { alerts: alerts, onMarkAsRead: markAlertAsRead, maxVisible: 4 }) }), _jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 1.1 }, className: "xl:col-span-2 p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: _jsx(TimelineObras, { obras: timelineData, maxVisible: 6 }) })] }), _jsxs("div", { className: "grid grid-cols-1 xl:grid-cols-3 gap-8", children: [_jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 1.2 }, className: "xl:col-span-2 p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: _jsx(MapaCalor, { data: heatMapData, metric: "inversion" }) }), _jsxs(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 1.3 }, className: "p-6 rounded-2xl bg-white/80 backdrop-blur-sm border border-white/20 shadow-xl", children: [_jsxs("h3", { className: "text-xl font-semibold text-gray-900 mb-6 flex items-center gap-2", children: [_jsx(Calendar, { className: "w-5 h-5 text-blue-600" }), "Pr\u00F3ximas Valorizaciones"] }), _jsx("div", { className: "space-y-4", children: valorizacionesProximas.slice(0, 5).map((valorizacion, index) => (_jsxs(motion.div, { initial: { opacity: 0, x: 20 }, animate: { opacity: 1, x: 0 }, transition: { delay: 1.3 + index * 0.1 }, className: `p-4 rounded-xl border-l-4 ${valorizacion.estado === 'Vencida' ? 'bg-red-50 border-red-500' :
                                            valorizacion.estado === 'Crítica' ? 'bg-amber-50 border-amber-500' :
                                                'bg-blue-50 border-blue-500'}`, children: [_jsxs("div", { className: "flex items-center justify-between mb-2", children: [_jsx("h4", { className: "font-medium text-gray-900 text-sm", children: valorizacion.obra }), _jsx("span", { className: `text-xs px-2 py-1 rounded-full ${valorizacion.estado === 'Vencida' ? 'bg-red-100 text-red-700' :
                                                            valorizacion.estado === 'Crítica' ? 'bg-amber-100 text-amber-700' :
                                                                'bg-blue-100 text-blue-700'}`, children: valorizacion.estado })] }), _jsx("p", { className: "text-xs text-gray-600 mb-2", children: valorizacion.contratista }), _jsxs("div", { className: "flex items-center justify-between", children: [_jsx("span", { className: "font-semibold text-gray-900", children: formatCurrency(valorizacion.monto) }), _jsx("span", { className: `text-xs font-medium ${valorizacion.diasRestantes < 0 ? 'text-red-600' :
                                                            valorizacion.diasRestantes <= 1 ? 'text-amber-600' :
                                                                'text-blue-600'}`, children: valorizacion.diasRestantes < 0
                                                            ? `${Math.abs(valorizacion.diasRestantes)} días vencida`
                                                            : valorizacion.diasRestantes === 0
                                                                ? 'Vence hoy'
                                                                : `${valorizacion.diasRestantes} días restantes` })] })] }, valorizacion.id))) })] })] }), _jsx(motion.div, { initial: { opacity: 0, y: 20 }, animate: { opacity: 1, y: 0 }, transition: { delay: 1.4 }, className: "p-6 rounded-2xl bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 text-white shadow-2xl", children: _jsxs("div", { className: "flex flex-col md:flex-row md:items-center md:justify-between gap-4", children: [_jsxs("div", { children: [_jsx("h3", { className: "text-xl font-semibold mb-2", children: "Centro de Comando Activo" }), _jsx("p", { className: "text-blue-100", children: "Sistema de monitoreo en tiempo real \u2022 Actualizaci\u00F3n autom\u00E1tica cada 30 segundos" })] }), _jsxs("div", { className: "flex items-center gap-3", children: [_jsxs("button", { className: "px-4 py-2 bg-white/20 backdrop-blur-sm rounded-xl hover:bg-white/30 transition-colors flex items-center gap-2", children: [_jsx(Users, { className: "w-4 h-4" }), _jsx("span", { children: "Gestionar Equipos" })] }), _jsxs("button", { className: "px-4 py-2 bg-white/20 backdrop-blur-sm rounded-xl hover:bg-white/30 transition-colors flex items-center gap-2", children: [_jsx(Settings, { className: "w-4 h-4" }), _jsx("span", { children: "Configuraci\u00F3n" })] })] })] }) }), false && (_jsx(motion.div, { initial: { opacity: 0 }, animate: { opacity: 1 }, exit: { opacity: 0 }, className: "fixed inset-0 bg-black/20 backdrop-blur-sm flex items-center justify-center z-50", children: _jsxs("div", { className: "p-6 bg-white rounded-2xl shadow-xl flex items-center gap-4", children: [_jsx(RefreshCw, { className: "w-6 h-6 animate-spin text-blue-600" }), _jsx("span", { className: "text-gray-900 font-medium", children: "Actualizando datos..." })] }) }))] }) }));
};
export default Dashboard;
